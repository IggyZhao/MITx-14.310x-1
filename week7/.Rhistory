##Approach 1: Use the fact that we can transform a uniform distribution U[0,1] random variable by the inverse of a cdf and get a random variable with that cdf
#We know the if Y is an exponential distribution RV, x = F(y) = 1 - e^(-lambda * y). Hence, the inverse function of cdf is y = - log(1-x)/ lambda. Since X and 1-X has the same distribution, we can write Y = -log(X)/lambda.
#Define the inverse cdf.Note that X is a random variable from uniform distribution u
inverse_cdf <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf(u,3)
#Find the distribution of y. Function density computes kernel density estimate
density_y <- density(y)
#Step 3: Plot the pdf
#pdf starts the graphic driver for producing pdf graphics
pdf("Exponential_distribution.pdf")
plot(density_y, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "yellow",lwd = 3, xlab = "")
hide <- dev.off()
rm (list = ls())
u <- runif(100000,0,1)
pdf("inverse_function.pdf")
inverse_cdf <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf(u,3)
density_y <- density(y)
plot(density_y, type = "l", main = "pdf of inverse exponential function", xlim = c(0,3), col = "red", lwd = 3, xlab = "")
hide <- dev.off()
rm (list = ls())
u <- runif(100000,0,1)
pdf("inverse_function.pdf")
inverse_cdf <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf(u,3)
density_y <- density(y)
hide <- dev.off()
plot(density_y, type = "l", main = "pdf of inverse exponential function", xlim = c(0,3), col = "red", lwd = 3, xlab = "")
rm (list = ls())
u <- runif(100000,0,1)
pdf("inverse_function.pdf")
inverse_cdf <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf(u,3)
density_y <- density(y)
hide <- dev.off()
plot(density_y, type = "l", main = "pdf of inverse exponential function", xlim = c(0,3), col = "red", lwd = 3, xlab = "")
rm(list=ls())
u<- runif(10000,0,1)
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "blue", lwd = 3, xlab = "")
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "blue", lwd = 3, xlab = "")
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "red", lwd = 3, xlab = "")
pdf("exponential.pdf")
#Step 1: Generate uniform distribution U[0,1] random variable
u <- runif(10000,0,1)
#Step 2: Construct pdf
##Approach 1: Use the fact that we can transform a uniform distribution U[0,1] random variable by the inverse of a cdf and get a random variable with that cdf
#We know the if Y is an exponential distribution RV, x = F(y) = 1 - e^(-lambda * y). Hence, the inverse function of cdf is y = - log(1-x)/ lambda. Since X and 1-X has the same distribution, we can write Y = -log(X)/lambda.
#Define the inverse cdf.Note that X is a random variable from uniform distribution u
inverse_cdf1 <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf1(u,3)
#Find the distribution of y. Function density computes kernel density estimate
density_y <- density(y)
#plot the pdf
#pdf starts the graphic driver for producing pdf graphics
pdf("exponential.pdf")
plot(density_y, type = "l", main = "pdf of inverse exp", col = "blue", lwd = 3, xlim = c(0,2), lwd = 3, xlab = "")
#Exercise 1: Create cdf of exponential distribution
#Step 1: Generate uniform distribution U[0,1] random variable
u <- runif(10000,0,1)
#Step 2: Construct pdf
##Approach 1: Use the fact that we can transform a uniform distribution U[0,1] random variable by the inverse of a cdf and get a random variable with that cdf
#We know the if Y is an exponential distribution RV, x = F(y) = 1 - e^(-lambda * y). Hence, the inverse function of cdf is y = - log(1-x)/ lambda. Since X and 1-X has the same distribution, we can write Y = -log(X)/lambda.
#Define the inverse cdf.Note that X is a random variable from uniform distribution u
inverse_cdf1 <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf1(u,3)
#Find the distribution of y. Function density computes kernel density estimate
density_y <- density(y)
#plot the pdf
#pdf starts the graphic driver for producing pdf graphics
pdf("exponential.pdf")
plot(density_y, type = "l", main = "pdf of inverse exp", col = "blue", lwd = 3, xlim = c(0,2), lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "blue", lwd = 3, xlab = "")
#Exercise 1: Create cdf of exponential distribution
#Step 1: Generate uniform distribution U[0,1] random variable
u <- runif(10000,0,1)
#Step 2: Construct pdf
##Approach 1: Use the fact that we can transform a uniform distribution U[0,1] random variable by the inverse of a cdf and get a random variable with that cdf
#We know the if Y is an exponential distribution RV, x = F(y) = 1 - e^(-lambda * y). Hence, the inverse function of cdf is y = - log(1-x)/ lambda. Since X and 1-X has the same distribution, we can write Y = -log(X)/lambda.
#Define the inverse cdf.Note that X is a random variable from uniform distribution u
inverse_cdf1 <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf1(u,3)
#Find the distribution of y. Function density computes kernel density estimate
density_y <- density(y)
#plot the pdf
#pdf starts the graphic driver for producing pdf graphics
pdf("exponential.pdf")
plot(density_y, type = "l", xlim = c(0,2), main = "pdf of inverse exp", col = "blue", lwd = 3, , lwd = 3, xlab = "")
plot(density_y, type = "l", xlim = c(0,2), main = "pdf of inverse exp", col = "blue", lwd = 3, xlab = "")
#Exercise 1: Create cdf of exponential distribution
#Step 1: Generate uniform distribution U[0,1] random variable
u <- runif(10000,0,1)
#Step 2: Construct pdf
##Approach 1: Use the fact that we can transform a uniform distribution U[0,1] random variable by the inverse of a cdf and get a random variable with that cdf
#We know the if Y is an exponential distribution RV, x = F(y) = 1 - e^(-lambda * y). Hence, the inverse function of cdf is y = - log(1-x)/ lambda. Since X and 1-X has the same distribution, we can write Y = -log(X)/lambda.
#Define the inverse cdf.Note that X is a random variable from uniform distribution u
inverse_cdf1 <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf1(u,3)
#Find the distribution of y. Function density computes kernel density estimate
density_y <- density(y)
#plot the pdf
#pdf starts the graphic driver for producing pdf graphics
pdf("exponential.pdf")
plot(density_y, type = "l", xlim = c(0,2), main = "pdf of inverse exp", col = "blue", lwd = 3, xlab = "")
##Approach 2: Plot the inverse of cdf of the exponential using qexp
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "blue", lwd = 3, xlab = "")
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "yellow", lwd = 3, xlab = "")
pdf("random_draw.pdf")
?rexp
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "blue", lwd = 3, xlab = "")
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "blue", lwd = 3, xlab = "")
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
rm(list=ls())
u <- runif(10000,0,1)
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "blue", lwd = 3, xlab = "")
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
pdf("random_draw.pdf")
rm(list=ls())
u <- runif(10000,0,1)
hide <- dev.off ()
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
hide <- dev.off ()
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
hide <- dev.off ()
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "yellow", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "yellow", lwd = 3, xlab = "")
hide <- dev.off()
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
hide <- dev.off()
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
hide <- dev.off()
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "yellow", lwd = 3, xlab = "")
#Step 1: Generate uniform distribution U[0,1] random variable
u <- runif(10000,0,1)
#Step 2: Construct pdf
##Approach 1: Use the fact that we can transform a uniform distribution U[0,1] random variable by the inverse of a cdf and get a random variable with that cdf
#We know the if Y is an exponential distribution RV, x = F(y) = 1 - e^(-lambda * y). Hence, the inverse function of cdf is y = - log(1-x)/ lambda. Since X and 1-X has the same distribution, we can write Y = -log(X)/lambda.
#Define the inverse cdf.Note that X is a random variable from uniform distribution u
inverse_cdf1 <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf1(u,3)
#Find the distribution of y. Function density computes kernel density estimate
density_y <- density(y)
#Plot the pdf: pdf starts the graphic driver for producing pdf graphics
pdf("exponential.pdf")
plot(density_y, type = "l", xlim = c(0,2), main = "pdf of inverse exp", col = "blue", lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "blue", lwd = 3, xlab = "")
#Exercise 1: Create cdf of exponential distribution
#Step 1: Generate uniform distribution U[0,1] random variable
u <- runif(10000,0,1)
#Step 2: Construct pdf
##Approach 1: Use the fact that we can transform a uniform distribution U[0,1] random variable by the inverse of a cdf and get a random variable with that cdf
#We know the if Y is an exponential distribution RV, x = F(y) = 1 - e^(-lambda * y). Hence, the inverse function of cdf is y = - log(1-x)/ lambda. Since X and 1-X has the same distribution, we can write Y = -log(X)/lambda.
#Define the inverse cdf.Note that X is a random variable from uniform distribution u
inverse_cdf1 <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf1(u,3)
#Find the distribution of y. Function density computes kernel density estimate
density_y <- density(y)
#Plot the pdf: pdf starts the graphic driver for producing pdf graphics
pdf("exponential.pdf")
plot(density_y, type = "l", xlim = c(0,2), main = "pdf of inverse exp", col = "blue", lwd = 3, xlab = "")
rm(list = ls())
u <- runif(10000,0,1)
inverse_cdf1 <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf1(u,3)
density_y <- density(y)
pdf("exponential.pdf")
plot(density_y, type = "l", xlim = c(0,2), main = "pdf of inverse exp", col = "blue", lwd = 3, xlab = "")
hide <- dev.off()
#Exercise 1: Create cdf of exponential distribution
rm(list = ls())
#Step 1: Generate uniform distribution U[0,1] random variable
u <- runif(10000,0,1)
#Step 2: Construct pdf
##Approach 1: Use the fact that we can transform a uniform distribution U[0,1] random variable by the inverse of a cdf and get a random variable with that cdf
#We know the if Y is an exponential distribution RV, x = F(y) = 1 - e^(-lambda * y). Hence, the inverse function of cdf is y = - log(1-x)/ lambda. Since X and 1-X has the same distribution, we can write Y = -log(X)/lambda.
#Define the inverse cdf.Note that X is a random variable from uniform distribution u
inverse_cdf1 <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf1(u,3)
#Find the distribution of y. Function density computes kernel density estimate
density_y <- density(y)
#Plot the pdf: pdf starts the graphic driver for producing pdf graphics
pdf("exponential.pdf")
plot(density_y, type = "l", xlim = c(0,2), main = "pdf of inverse exp", col = "blue", lwd = 3, xlab = "")
hide <- dev.off()
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "yellow", lwd = 3, xlab = "")
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
hide <- dev.off()
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "blue", lwd = 3, xlab = "")
#Exercise 1: Create cdf of exponential distribution
rm(list = ls())
#Step 1: Generate uniform distribution U[0,1] random variable
u <- runif(10000,0,1)
#Step 2: Construct pdf
##Approach 1: Use the fact that we can transform a uniform distribution U[0,1] random variable by the inverse of a cdf and get a random variable with that cdf
#We know the if Y is an exponential distribution RV, x = F(y) = 1 - e^(-lambda * y). Hence, the inverse function of cdf is y = - log(1-x)/ lambda. Since X and 1-X has the same distribution, we can write Y = -log(X)/lambda.
#Define the inverse cdf.Note that X is a random variable from uniform distribution u
inverse_cdf1 <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf1(u,3)
#Find the distribution of y. Function density computes kernel density estimate
density_y <- density(y)
#Plot the pdf: pdf starts the graphic driver for producing pdf graphics
pdf("exponential.pdf")
plot(density_y, type = "l", xlim = c(0,2), main = "pdf of inverse exp", col = "blue", lwd = 3, xlab = "")
hide <- dev.off()
rm(list=ls())
u <- runif(10000,0,1)
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "blue", lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
hide <- dev.off()
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = "yellow", lwd = 3, xlab = "")
pdf("random_draw.pdf")
y_rexp <- rexp(10000, rate = 3)
density_y_rexp <- density(y_rexp)
hide <- dev.off()
plot(density_y_rexp, type = "l", xlim = c(0,2), main = "random draw from exp distribution", lwd = 3, col = "red", xlab = "")
inverse_cdf1 <- function(x,lambda) -log(x)/lambda
y <- inverse_cdf1(u,3)
#Find the distribution of y. Function density computes kernel density estimate
density_y <- density(y)
#Plot the pdf: pdf starts the graphic driver for producing pdf graphics
pdf("exponential.pdf")
hide <- dev.off()
plot(density_y, type = "l", xlim = c(0,2), main = "pdf of inverse exp", col = "blue", lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", fill = rgb(1,0,0.5,0.8), lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
pdf("inverse_exponential.pdf")
y_qexp <- qexp(u, rate = 3)
density_y_qexp <- density(y_qexp)
hide <- dev.off ()
plot(density_y_qexp, type = "l", xlim = c(0,2), main = "pdf of inverse exponential function", col = rgb(1,0,0.5,0.8), lwd = 3, xlab = "")
?dhyper
dhyper(5,13,39,10)
?pexp
?dnorm
v <- rnorm(1000,3,0.25)
dnorm(0,0,0.5)
pnorm(1.96,0,1)
qnorm(0.975,0,1)
qnorm(0.975,lower.tail = FALSE)
qnorm(0.975,0,1)
y_qnorm <- qnorm(u)
u <- runif(10000,0,1)
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm)
pdf("normal.pdf")
plot(density_y_qnorm, type = "l", xlim = c(0,2), main = "pdf of normal distribution", col = rgb(0.2,0.8,1,0.7), lwd = 3, xlab = "")
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm)
pdf("normal.pdf")
hide <- dev.off
plot(density_y_qnorm, type = "l", xlim = c(0,2), main = "pdf of normal distribution", col = rgb(0.2,0.8,1,0.7), lwd = 3, xlab = "")
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm)
pdf("normal.pdf")
hide <- dev.off
plot(density_y_qnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution", col = rgb(0.2,0.8,1,0.7), lwd = 3, xlab = "")
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm)
pdf("normal.pdf")
hide <- dev.off
plot(density_y_qnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution", col = rgb(0.2,0.8,1,0.7), lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm)
pdf("normal.pdf")
hide <- dev.off
plot(density_y_qnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution", col = rgb(0.2,0.8,1,0.7), lwd = 3, xlab = "")
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm)
pdf("normal.pdf")
hide <- dev.off()
plot(density_y_qnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution", col = rgb(0.2,0.8,1,0.7), lwd = 3, xlab = "")
plot(density_y_qnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution", col = "navyblue", lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm)
pdf("normal.pdf")
hide <- dev.off()
plot(density_y_qnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution", col = "navyblue", lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm, bw = 1)
pdf("normal.pdf")
hide <- dev.off()
plot(density_y_qnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution", col = "navyblue", lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm, bw = 1)
pdf("normal.pdf")
hide <- dev.off()
plot(density_y_qnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution", col = "navyblue", lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm, bw = 1)
pdf("normal.pdf")
hide <- dev.off()
plot(density_y_qnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution", col = "navyblue", lwd = 3, xlab = "")
rm(list=ls())
u <- runif(10000,0,1)
y_qnorm <- qnorm(u)
density_y_qnorm <- density(y_qnorm, bw = 1)
pdf("normal.pdf")
hide <- dev.off()
plot(density_y_qnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution", col = rgb(0.3,0.5,0.4,0.8), lwd = 3, xlab = "")
y_rnorm <- rnorm(10000,0,1)
density_y_rnorm <- density(y_rnorm, bw = 1)
pdf("random_norma.pdf")
hide <- dev.off()
plot(density_y_rnorm, type = "l", xlim = c(-5,5), main = "pdf of normal distribution from random draw", col = rgb(0.4,0.5,0.8,0.7), lwd = 3, xlab = "")
?sum
(0.731+0.750+0.893+0.692)/4-(0.462+0.571+0.923+0.333)/4
install.packages("perm")
library(perm)
rm(list = ls())
setwd("/Users/nguyetanh/Documents/MITx-14.310x/week7/")
?chooseMatrix
read.csv("/Users/nguyetanh/Documents/MITx-14.310x/week7/teacher_data.csv")
read.csv("/Users/nguyetanh/Documents/MITx-14.310x/week7/teacher_final.csv")
read.csv("C://Users//nguyetanh//Documents//MITx-14.310x//week7//teacher_final.csv")
read.csv("C://Users//nguyetanh//Documents//MITx-14.310x//week7//teachers_final.csv")
data_ps8 <- read.csv("C://Users//nguyetanh//Documents//MITx-14.310x//week7//teachers_final.csv")
str(data_ps8)
